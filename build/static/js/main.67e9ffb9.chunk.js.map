{"version":3,"sources":["components/header/index.js","components/listItems/index.js","App.js","index.js"],"names":["Header","props","onReset","bind","this","onResetTest","sv","className","resetDisabled","onClick","disabled","Component","ListItems","handleChange","event","onChangeValue","target","value","data","statusId","statusName","statusYear","statusColor","statusPantoneValue","type","id","checked","onChange","htmlFor","map","item","index","key","name","toUpperCase","substr","length","year","style","backgroundColor","color","pantone_value","App","componentDidMount","fetchItems","localStorage","setItem","setState","getItem","fetch","then","res","json","result","items","state","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.67e9ffb9.chunk.js","sourcesContent":["import React, {Component} from 'react';\n\nexport default class Header extends Component {\n\n    constructor(props){\n        super(props);\n\n        this.onReset = this.onReset.bind(this);\n    }\n\n    onReset(){\n        this.props.onResetTest();\n    }\n\n    render() {\n        let sv = false, className = 'test';\n        if (this.props.resetDisabled === 'true') {\n            sv = true;\n            className = 'disabled';\n        }\n        return (\n            <header>\n                <h1>Pantone colors</h1>\n                <button \n                    onClick={this.onReset}\n                    disabled = {sv}\n                    className= {className}\n                >\n                    Reset\n                </button>\n            </header>\n        )\n    }\n}","import React, {Component} from 'react';\n\nexport default class ListItems extends Component {\n\n    constructor(props){\n        super(props)\n\n        this.handleChange = this.handleChange.bind(this);\n    }\n\n    handleChange(event){\n        this.props.onChangeValue(event.target.value);\n    }\n\n    render() {\n        const {data, statusId, statusName, statusYear, statusColor, statusPantoneValue} = this.props;\n\n        return (\n            <table className=\"table\">\n                <thead>\n                    <tr>\n                        \n                        {(statusId === 'true') ? (\n                        <th className=\"text-right\">\n                            <input type=\"checkbox\" value=\"statusId\" id=\"statusId\" checked={[statusId]} onChange={this.handleChange} />\n                            <label htmlFor=\"statusId\">ID</label>\n                        </th>) : false}\n                        {(statusName === 'true') ? (\n                        <th>\n                            <input type=\"checkbox\" value=\"statusName\" id=\"statusName\" checked={[statusName]} onChange={this.handleChange} />\n                            <label htmlFor=\"statusName\">Name</label>\n                        </th>) : false}\n                        {(statusYear === 'true') ? (\n                        <th className=\"text-right\">\n                            <input type=\"checkbox\" value=\"statusYear\" id=\"statusYear\"  checked={[statusYear]} onChange={this.handleChange} />\n                            <label htmlFor=\"statusYear\">Year</label>\n                        </th>) : false}\n                         {(statusColor === 'true') ? (\n                        <th>\n                            <input type=\"checkbox\" value=\"statusColor\" id=\"statusColor\" checked={[statusColor]} onChange={this.handleChange} />\n                            <label htmlFor=\"statusColor\">Color</label>\n                        </th>) : false}\n                        {(statusPantoneValue === 'true') ? (\n                        <th>\n                            <input type=\"checkbox\" value=\"statusPantoneValue\" id=\"statusPantoneValue\" checked={[statusPantoneValue]} onChange={this.handleChange} />\n                            <label htmlFor=\"statusPantoneValue\">Pantone Value</label>\n                        </th>) : false}\n\n                    </tr>\n                </thead>\n            <tbody>\n            {data.map((item, index) => {\n                return(\n                    <tr key={index}>\n                        {(statusId === 'true') ? (<td className=\"text-right\">{item.id} </td>) : false}\n                        {(statusName === 'true') ? (<td>{item.name[0].toUpperCase() + item.name.substr(1, item.name.length - 1)} </td>) : false}\n                        {(statusYear === 'true') ? (<td className=\"text-right\">{item.year} </td>) : false}\n                        {(statusColor === 'true') ? (<td><div className=\"color\" style={{backgroundColor: item.color}}></div>{item.color} </td>) : false}\n                        {(statusPantoneValue === 'true') ? (<td>{item.pantone_value} </td>) : false}\n                    </tr>\n                )\n            })}\n            </tbody>\n            </table>\n        )\n    }\n}","import React, { Component } from 'react';\nimport Header from './components/header';\nimport ListItems from './components/listItems';\n\nexport default class App extends Component{\n  constructor(props){\n    super(props);\n\n    this.state = {\n      statusId: (localStorage.getItem('statusId')) ? localStorage.getItem('statusId') : 'true',\n      statusName: (localStorage.getItem('statusName')) ? localStorage.getItem('statusName') : 'true',\n      statusYear: (localStorage.getItem('statusYear')) ? localStorage.getItem('statusYear') : 'true',\n      statusColor: (localStorage.getItem('statusColor')) ? localStorage.getItem('statusColor') : 'true',\n      statusPantoneValue: (localStorage.getItem('statusPantoneValue')) ? localStorage.getItem('statusPantoneValue') : 'true',\n      resetDisabled: (localStorage.getItem('resetDisabled')) ? localStorage.getItem('resetDisabled') : 'true',\n      items: [],\n    }\n  }\n\n  componentDidMount = () => {\n    this.fetchItems();\n  }\n\n  onChangeValue = value => {\n    localStorage.setItem([value], false);\n    localStorage.setItem('resetDisabled', false)\n    this.setState({\n      [value]: localStorage.getItem([value]),\n      resetDisabled: localStorage.getItem('resetDisabled'),\n    })\n    \n  }\n\n  onResetTest = () => {\n    localStorage.setItem('statusId', true);\n    localStorage.setItem('statusName', true);\n    localStorage.setItem('statusYear', true);\n    localStorage.setItem('statusColor', true);\n    localStorage.setItem('statusPantoneValue', true);\n    localStorage.setItem('resetDisabled', true);\n\n    this.setState({\n      statusId: localStorage.getItem('statusId'),\n      statusName: localStorage.getItem('statusName'),\n      statusYear: localStorage.getItem('statusYear'),\n      statusColor: localStorage.getItem('statusColor'),\n      statusPantoneValue: localStorage.getItem('statusPantoneValue'),\n      resetDisabled: localStorage.getItem('resetDisabled'),\n    })\n  }\n\n  fetchItems = () => {\n    fetch('https://reqres.in/api/unknown?per_page=12')\n      .then(res => res.json())\n      .then(result => {\n        this.setState({\n          items: result.data,\n        })\n      });\n  }\n\n  render(){\n    const {items, statusId, statusName, statusYear, statusColor, statusPantoneValue, resetDisabled} = this.state;\n    return (\n      <>\n      <Header\n        onResetTest={this.onResetTest}\n        resetDisabled={resetDisabled}\n      />\n      <ListItems \n        data={items}\n        statusId={statusId}\n        statusName={statusName}\n        statusYear={statusYear}\n        statusColor={statusColor}\n        statusPantoneValue={statusPantoneValue}\n        onChangeValue={this.onChangeValue}\n      />\n      </>\n    );\n  }\n  \n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}